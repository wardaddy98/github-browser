{"version":3,"sources":["Components/RepoCard/RepoCard.js","Components/RepositoryWindow/RepositoryWindow.js","Components/BranchCard/BranchCard.js","Components/IssuesCard/IssuesCard.js","Components/CommitsWindow/CommitsWindow.js","Components/DetailsWindow/DetailsWindow.js","Components/NewRepoCard/NewRepoCard.js","Components/Window/Window.js","Components/Header/Header.js","App.js","index.js"],"names":["RepoCard","name","description","setSelectedRepo","className","onClick","RepositoryWindow","toDelete","setDisplayRepoCard","newUserName","newRepoName","submitRepo","setSubmitRepo","repoName","repoDescription","setRepoName","SetRepoDescription","useEffect","fetch","then","response","json","result","assignData","addRepo","dummy1","dummy2","slice","output","unshift","empty1","empty2","i","length","push","arr","filter","value","index","indexOf","map","dummy","BranchCard","bname","setView","setSelectedBranch","selectedBranch","IssuesCard","title","avatar","src","alt","CommitsWindow","commitUser","commitDate","commitMessage","commitAvatar","DetailsWindow","selectedRepo","setToDelete","commitData","setCommitData","useState","branchName","setBranchName","view","issueData","setIssueData","assignBranchData","result1","result2","assignIssueData","empty","id","user_name","user","login","issue_title","avatar_url","commit","committer","date","message","console","log","catch","err","alert","value2","NewRepoCard","setNewRepoName","setNewUserName","htmlFor","type","placeholder","onKeyUp","event","target","handleNamePress","required","handleUserPress","Window","displayRepoCard","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0de16b13.chunk.js","sourcesContent":["import React from 'react'\r\nimport './RepoCard.css'\r\n\r\nfunction RepoCard({name, description,setSelectedRepo}) {\r\n\r\n\r\n        return (\r\n            <div className=\"repo-card \" onClick={()=>{setSelectedRepo(name)}}>\r\n                <h1 className='link dim black b'>{name}</h1>\r\n                <p>{description}</p>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default RepoCard\r\n","import React, { useEffect, useState} from 'react';\r\nimport './RepositoryWindow.css';\r\nimport RepoCard from '../RepoCard/RepoCard';\r\n\r\n\r\n\r\nfunction RepositoryWindow({ setSelectedRepo,toDelete,setDisplayRepoCard, newUserName,newRepoName, submitRepo, setSubmitRepo,repoName,repoDescription,setRepoName,SetRepoDescription}) {\r\n   \r\n   \r\n\r\nuseEffect(()=>{\r\n    fetch('https://api.github.com/users/cfinke/repos').then((response)=>{\r\n        return(response.json()).then((result)=>{\r\n            assignData(result);       \r\n        })\r\n    });\r\n\r\n},[])\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\nuseEffect(()=>{\r\n    if(submitRepo){\r\n       addRepo()\r\n    }  \r\n},[submitRepo])\r\n\r\n\r\nconst addRepo=()=>{\r\n     let dummy1=[]; let dummy2=[];\r\n    dummy1=repoName.slice();\r\n    dummy2=repoDescription.slice();\r\n\r\n    fetch(`https://api.github.com/repos/${newUserName}/${newRepoName}`).then((response=>{\r\n        return(response.json());\r\n    })).then((output)=>{\r\n            dummy1.unshift(output.name);\r\n            dummy2.unshift(output.description);\r\n            setRepoName(dummy1);\r\n            SetRepoDescription(dummy2);\r\n            setSubmitRepo(false);\r\n        \r\n        \r\n        })\r\n}\r\n\r\n\r\n\r\nconst assignData=(result)=>{\r\n   let empty1=[]; let empty2=[];\r\n    for(let i=0;i<result.length;i++){  \r\n            empty1.push(result[i].name);\r\n            empty2.push(result[i].description);\r\n    }\r\n    setRepoName(empty1);\r\n    SetRepoDescription(empty2);\r\n}\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n    const arr= repoName.filter((value,index)=>{\r\n        if(index!==repoName.indexOf(toDelete)){\r\n            return value;\r\n        }\r\n    })\r\n    setRepoName(arr);\r\n    setSelectedRepo('');\r\n    \r\n},[toDelete])\r\n\r\n\r\n\r\n\r\n\r\nconst handleAddButton=()=>{\r\n    setDisplayRepoCard(true);\r\n}\r\n\r\n\r\n            return(\r\n                <div className='repository-window'>\r\n                    <div className='repos'>\r\n                        {repoName.map((dummy,index)=>{\r\n                                return(<RepoCard name={dummy} description={repoDescription[index]} key={index} setSelectedRepo={setSelectedRepo} />)\r\n                                \r\n                            })}\r\n                    </div>\r\n\r\n                    <div className='button-window'>\r\n                        <button \r\n                            onClick={()=>{\r\n                                handleAddButton();\r\n                            }}\r\n                            className='add-button f2 link dim  ph3 pv2 white bg-purple'>+</button>\r\n                    </div>\r\n                    \r\n\r\n\r\n                </div>\r\n            )\r\n   \r\n         \r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default RepositoryWindow ;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './BranchCard.css';\r\n\r\nconst BranchCard=({bname, setView, setSelectedBranch, selectedBranch})=>{\r\n\r\n    const handleBranchClick=()=>{\r\n        setView('commits');\r\n        setSelectedBranch(bname);\r\n    }\r\n\r\n\r\n    return(\r\n        <div onClick={handleBranchClick} className='branch-card'>\r\n            <h1 className='link dim black b'>{bname}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BranchCard;","import React from 'react'\r\nimport './IssuesCard.css'\r\n\r\nfunction IssuesCard({name,title,avatar}) {\r\n    return (\r\n        <div className='issues-card'>\r\n            <h1 className='tl pa3' >{title}</h1>\r\n            <img className='img' src={avatar} alt='avatar'/>\r\n            <h1>{name}</h1>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IssuesCard\r\n","import React from 'react'\r\nimport './CommitsWindow.css'\r\n\r\n\r\nfunction CommitsWindow({commitUser, commitDate, commitMessage, commitAvatar}) {\r\n   \r\n\r\n    return (\r\n             <div className='contents-commits tl'>\r\n                <h3>{commitDate.slice(0,10)}</h3>\r\n                <p >{commitMessage}</p>\r\n                <img src={commitAvatar} className='commit-avatar dib' alt='user' />\r\n                <h2 className='dib pl3' >{commitUser}</h2>\r\n            </div> \r\n    )\r\n}\r\n\r\nexport default CommitsWindow\r\n","import React, { useEffect, useState } from 'react'\r\nimport BranchCard from '../BranchCard/BranchCard';\r\nimport IssuesCard from '../IssuesCard/IssuesCard';\r\nimport CommitsWindow from '../CommitsWindow/CommitsWindow';\r\nimport './DetailsWindow.css'\r\n\r\n\r\nfunction DetailsWindow({selectedRepo, setToDelete, commitData, setCommitData}) {\r\n\r\nconst [branchName, setBranchName]= useState([]);\r\nconst [view, setView]= useState('branches');\r\nvar [issueData,setIssueData]= useState([]);\r\nconst [selectedBranch, setSelectedBranch]= useState('');\r\n\r\n\r\nvar dummy= []; \r\nvar dummy2={};\r\n\r\n\r\nuseEffect(()=>{\r\n\r\n    fetch(`https://api.github.com/repos/cfinke/${selectedRepo}/branches`).then((response)=>{\r\n        return(response.json());\r\n    }).then((result)=>{\r\n        assignBranchData(result);\r\n    });\r\n\r\n},[selectedRepo])\r\n\r\nconst assignBranchData= (result)=>{\r\n    dummy=[];\r\n    for(let i=0; i<result.length; i++){\r\n         dummy.push(result[i].name) ;\r\n        }\r\n        setBranchName(dummy);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n\r\n    fetch(`https://api.github.com/repos/cfinke/${selectedRepo}/issues`).then((result1)=>{\r\n        return(result1.json());\r\n    }).then((result2)=>{\r\n        assignIssueData(result2);\r\n    })\r\n\r\n},[selectedRepo])\r\n\r\n\r\nconst assignIssueData=(result)=>{\r\n        dummy={};\r\n        let empty=[];\r\n        for(let i=0; i<result.length; i++){\r\n            dummy2.id=i;\r\n            dummy2.user_name=result[i].user.login;\r\n            dummy2.issue_title= result[i].title;\r\n            dummy2.avatar_url= result[i].user.avatar_url;\r\n            \r\n            empty.push(dummy2);\r\n        }\r\n        setIssueData(empty);\r\n    \r\n    \r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n    if(view==='commits'){\r\n        \r\n        fetch(`https://api.github.com/repos/cfinke/${selectedRepo}/commits?sha=${selectedBranch}`).then((response)=>{\r\n            return(response.json()).then((result)=>{\r\n                let empty=[], dummy={};\r\n                for(let i=0;i<result.length;i++){\r\n                        dummy={};\r\n                    dummy.name=result[i].commit.committer.name;\r\n                    dummy.date=result[i].commit.committer.date;\r\n                    dummy.message=result[i].commit.message;\r\n                    if((result[i].committer.avatar_url).length>0){\r\n                        dummy.avatar=result[i].committer.avatar_url;\r\n                    }else{\r\n                        dummy.avatar='';\r\n                    }\r\n                    \r\n                    console.log(dummy.avatar);\r\n                    \r\n                    empty.push(dummy);\r\n                    \r\n                }\r\n                setCommitData(empty);\r\n                 })\r\n         }).catch((err)=>alert('Avatar url not present for this branch. Try another Branch'))\r\n        \r\n    }\r\n},[view])\r\n\r\n\r\n\r\nconst  onBranchesPress=()=>{\r\n    setView('branches');  \r\n}\r\n\r\nconst  onIssuesPress=()=>{\r\n    setView('issues');\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst getContents=()=>{\r\n    let contents;\r\n      \r\n\r\n\r\n    if(view==='branches' && branchName.length>0){\r\n            contents =   branchName.map((value,index)=>{\r\n                return (<BranchCard bname={value} key={index} setView={setView} setSelectedBranch={setSelectedBranch} selectedBranch={selectedBranch}/>)\r\n            });\r\n        }else if(view==='branches' && branchName.length===0){\r\n            contents=(<h1>Select any Repository</h1>)\r\n        }\r\n        else if(view==='issues' && issueData.length>0){\r\n\r\n                contents= issueData.map((value2,index)=>{\r\n                    return(<IssuesCard name={value2.user_name} title={value2.issue_title} avatar={value2.avatar_url} key={index}/>) \r\n                })\r\n        \r\n        }\r\n        else if(view==='issues' && issueData.length===0){\r\n            contents=(<h1>Selected Repo has No Issues</h1>)\r\n        }\r\n        else{\r\n            contents=(<h1>nothing to display</h1>)\r\n        }\r\n\r\n        return contents;\r\n }     \r\n    \r\n const handleDeletePress=()=>{\r\n    setToDelete(selectedRepo);\r\n    setView('branches');\r\n}\r\n\r\nconst handleBackButton=()=>{\r\n    setView('branches');\r\n}\r\n\r\n\r\n\r\nif(view==='commits'){\r\n    \r\n        return(\r\n            <div className='details-window'>\r\n                    <div className='commits-window'>\r\n                            <div className='header-commits'>\r\n                                <button onClick={()=>handleBackButton()} className='back-button tl f6 link dim br1 pl2 pa3 dib white bg-purple'>BACK</button>\r\n                                <h1 className='tc dib pl7'>Commits {selectedBranch}</h1>\r\n                            </div>\r\n                            {\r\n                                commitData.map((value,index)=>{\r\n                                    return(<CommitsWindow commitUser={value.name} commitDate={value.date} commitMessage={value.message} commitAvatar={value.avatar} key={index}/>)\r\n                                })\r\n                               \r\n                                \r\n                            }\r\n                            \r\n                    </div>\r\n                    \r\n        </div>\r\n            )\r\n\r\n}else{\r\n\r\n\r\n    return (\r\n        <div className='details-window'>\r\n                <div className='button-container tr'>\r\n                        <button className='f6 link dim br1 ph3 pv2 mb2 dib white bg-purple' onClick={()=>{\r\n                                handleDeletePress();\r\n                            }}>DELETE REPO</button>\r\n                </div>\r\n\r\n                <div className='main-Container'>\r\n                        <div className='tabs'>\r\n                                <button className='f6 link dim br1  pa2 white bg-purple ' onClick={()=>{\r\n                                    onBranchesPress();\r\n                                }}>BRANCHES</button>\r\n\r\n                                <button className='f6 link dim br1  pa2 white bg-purple ' onClick={()=>{\r\n                                    onIssuesPress();\r\n                                }}>ISSUES</button>\r\n\r\n                        </div>\r\n\r\n                        <div className='contents'>\r\n                                {getContents()}\r\n                        </div>\r\n\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n    \r\n    \r\n}\r\n\r\nexport default DetailsWindow ;\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport './NewRepoCard.css';\r\n\r\n\r\n\r\n\r\n\r\nfunction NewRepoCard({setNewRepoName, setNewUserName, setSubmitRepo, setDisplayRepoCard}){\r\n\r\n\r\n\r\n    const handleUserPress=(event)=>{\r\n            setNewUserName(event.target.value);\r\n\r\n    }\r\n    \r\n    const handleNamePress=(event)=>{\r\n        \r\n            setNewRepoName(event.target.value);\r\n    \r\n    }\r\n\r\n    const handleBackRepoCard=()=>{\r\n        setDisplayRepoCard(false);\r\n    }\r\n\r\n\r\n    const handleSubmit=()=>{\r\n        setSubmitRepo(true);\r\n        setDisplayRepoCard(false);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        \r\n        <div className='form'>\r\n            \r\n            <div className='fhead'>\r\n                <h1 className='tc'>ADD NEW REPOSITORY</h1>\r\n            </div>\r\n             \r\n\r\n\r\n             <div className='fbody'>\r\n                    <label htmlFor='user ' className='db pv2'>Owner/Organisation</label>\r\n                    <input type='text' id='user'\r\n                        className='db pv2'\r\n                        placeholder='eg:wardaddy98'\r\n                        onKeyUp={(event)=>{\r\n                            handleNamePress(event);\r\n                            \r\n                        }}\r\n                        required\r\n                    />\r\n\r\n                    <label htmlFor='repo' className='db pv2'>Repository Name</label>\r\n                    <input type= 'text' id='repo' className='db pv2'\r\n                        placeholder='eg: github-browser'\r\n                        onKeyUp={(event)=>{\r\n                            handleUserPress(event);\r\n                            \r\n                        }}\r\n                        required\r\n                    />\r\n                    <button onClick={()=>handleBackRepoCard()} className='pv2 link dim white bg-black'>BACK</button>\r\n                    <button onClick={()=>{\r\n                        handleSubmit();\r\n                    }}\r\n                    type='submit' className='pv2 link dim '>ADD</button>\r\n             </div>\r\n            \r\n        </div> \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default NewRepoCard\r\n","import React , {useEffect, useState} from 'react';\r\nimport RepositoryWindow from '../RepositoryWindow/RepositoryWindow';\r\nimport DetailsWindow from '../DetailsWindow/DetailsWindow';\r\nimport './Window.css';\r\nimport NewRepoCard from '../NewRepoCard/NewRepoCard';\r\n\r\n\r\nconst Window= ()=>{\r\n    \r\nconst [selectedRepo, setSelectedRepo]= useState('');\r\nconst [toDelete, setToDelete]=useState('');\r\nconst [displayRepoCard, setDisplayRepoCard]= useState(false);\r\nconst[newUserName,setNewUserName]=useState('');\r\nconst[newRepoName,setNewRepoName]= useState('');\r\nconst[submitRepo,setSubmitRepo]= useState(false);\r\nconst [repoName,setRepoName]=useState([]);\r\nconst [repoDescription,SetRepoDescription]=useState([]);\r\nconst [commitData, setCommitData]=useState([]);\r\n\r\n\r\n\r\n    if(displayRepoCard){\r\n        return(<NewRepoCard setNewRepoName={setNewRepoName} setNewUserName={setNewUserName} newUserName={newUserName} newRepoName={newRepoName} setSubmitRepo={setSubmitRepo} setDisplayRepoCard={setDisplayRepoCard}/>)\r\n\r\n    }else if(displayRepoCard===false){\r\n        return(\r\n            <div className='window'>\r\n                <RepositoryWindow \r\n                    setSelectedRepo={setSelectedRepo} \r\n                    toDelete={toDelete} \r\n                    setDisplayRepoCard={setDisplayRepoCard}\r\n                    newUserName={newUserName}\r\n                    newRepoName={newRepoName}\r\n                    submitRepo={submitRepo}\r\n                    setSubmitRepo={setSubmitRepo}\r\n                    repoName={repoName}\r\n                    repoDescription={repoDescription}\r\n                    setRepoName={setRepoName}\r\n                    SetRepoDescription={SetRepoDescription}\r\n                />\r\n\r\n                <DetailsWindow selectedRepo={selectedRepo} setToDelete={setToDelete} commitData={commitData} setCommitData={setCommitData} />\r\n            </div> \r\n        )\r\n    }\r\n     \r\n}\r\n\r\nexport default Window;","import React from 'react'\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className='header-main'>\r\n            \r\n                <h1 className='tc '>Gihub Browser</h1>\r\n             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header ;\r\n","import Window from './Components/Window/Window';\nimport './App.css';\nimport Header from './Components/Header/Header';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Header/>\n      <Window/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}